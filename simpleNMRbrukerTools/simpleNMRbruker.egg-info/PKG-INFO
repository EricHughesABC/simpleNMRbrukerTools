Metadata-Version: 2.4
Name: simpleNMRbruker
Version: 1.0.0
Summary: Calls simpleNMR from Bruker Topspin
Author-email: Eric Hughes <erichughesabc@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/bruker-nmr-converter
Project-URL: Repository, https://github.com/yourusername/bruker-nmr-converter.git
Project-URL: Issues, https://github.com/yourusername/bruker-nmr-converter/issues
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: numpy>=1.20.0
Requires-Dist: pandas>=1.5.0
Requires-Dist: pathlib-mate>=1.0.0
Requires-Dist: requests>=2.25.0
Provides-Extra: chemistry
Requires-Dist: rdkit>=2022.9.1; extra == "chemistry"
Provides-Extra: gui
Requires-Dist: guidata>=2.0.0; extra == "gui"
Provides-Extra: test
Requires-Dist: pytest>=7.0.0; extra == "test"
Requires-Dist: pytest-cov>=4.0.0; extra == "test"
Requires-Dist: pytest-mock>=3.0.0; extra == "test"


## Key Improvements Made

### 1. **Simplified Architecture**
- Separated concerns into logical modules
- Created clear interfaces between components
- Reduced complexity in main classes

### 2. **Better Error Handling**
- Added proper exception handling
- Meaningful error messages
- Graceful degradation for missing files

### 3. **Comprehensive Documentation**
- Detailed docstrings for all classes and methods
- Type hints throughout
- Clear parameter descriptions

### 4. **Robust Testing**
- Unit tests for individual components
- Integration tests for workflow
- Mock data for reliable testing
- Good test coverage

### 5. **Configuration Management**
- Separated experiment configurations
- Easy to extend with new experiment types
- Centralized settings

### 6. **Code Quality**
- Consistent naming conventions
- Reduced code duplication
- Better separation of concerns
- Type safety with hints

## Usage Examples

### Basic Usage
```python
from bruker_nmr.src.core.data_reader import BrukerDataDirectory
from bruker_nmr.src.core.json_converter import BrukerToJSONConverter
from bruker_nmr.src.config import EXPERIMENT_CONFIGS

# Read Bruker data
data_dir = "/path/to/bruker/data"
reader = BrukerDataDirectory(data_dir, EXPERIMENT_CONFIGS)

# Convert to JSON
converter = BrukerToJSONConverter(data_dir)
user_selections = {
    "10": {"experimentType": "H1_1D", "procno": "1"}
}
json_data = converter.convert_to_json(user_selections)
